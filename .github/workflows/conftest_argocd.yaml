name: Guardrails

on:
  workflow_dispatch:
  pull_request:
    branches:
    - main

jobs:
  guardrails:
    runs-on: ["self-hosted","Linux","ARM64","runner-devops"]
    outputs:
      msg: ${{ steps.check-conftest.outputs.msg }}
      failure: ${{ steps.check-conftest.outputs.failure }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
         fetch-depth: 0    
    - name: Checkout conftest repo
      uses: doliveiraorg/custom-workflows/.github/actions/conftest@main
      with:
        bot_github_token: ${{ secrets.BOT_GITHUB_TOKEN }}
    - name: Get changed files#
      id: changed-files
      uses: tj-actions/changed-files@v36
    - name: Check conftest
      id: check-conftest
      run: |
          TEMP_FILE=$(mktemp)
          CONFTEST_POLICIES_PATH="policies/kubernetes/argocd"
          CONFTEST_NAMESPACE="argocd"
          for file in ${{ steps.changed-files.outputs.all_changed_files }}
          do
              CONFTEST_EXEC="$(conftest test $file --policy $CONFTEST_POLICIES_PATH --no-fail -n $CONFTEST_NAMESPACE -o json | jq -r '.[] | ((.warnings[]?.msg // []), (.failures[]?.msg // []) | select(. != null))' | tr -d '[]"' | sed '/^\s*$/d')#" 
              echo $CONFTEST_EXEC | tee -a $TEMP_FILE
              
              CONFTEST_FAILURES="$(conftest test $file --policy $CONFTEST_POLICIES_PATH --no-fail -n kubernetes -o json | jq -r '.[0].failures')"

              echo $CONFTEST_FAILURES

              if [ "$CONFTEST_FAILURES" != "null" ]
              then 
                echo "failure=true" >> $GITHUB_OUTPUT
              fi                   
          done
          echo "msg=$(cat $TEMP_FILE | base64 | tr -d '\n')" >> $GITHUB_OUTPUT     
  open-pr:
    runs-on: ["self-hosted","Linux","ARM64","runner-devops"]
    needs: guardrails
    steps:                    
    - name: Update Pull Request with Results
      uses: actions/github-script@v6
      env:
        MSG_BASE64: ${{ needs.guardrails.outputs.msg }}
      with:
        github-token: ${{ secrets.BOT_GITHUB_TOKEN }}
        result-encoding: string
        script: |
                const msgBase64 = process.env.MSG_BASE64;
                const msgString = Buffer.from(msgBase64, 'base64').toString('utf-8');
                const splitMsgString = msgString.split('#');
                const filteredMsgString = splitMsgString.filter(item => item.trim() !== '');
                filteredMsgString.forEach(item => {                
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: item.trim()
                  })                                
                })
    - name: Check status
#      if: steps.conftest-scan.outputs.failure == 'true'
      run: echo ${{ needs.guardrails.outputs.failure }}
