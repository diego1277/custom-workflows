name: "setup-terraform"
description: "setup terraform"
inputs:
  terraform_version:
    required: false
    description: 'versao do terraform'
    default: '1.3.3'
  terragrunt_version:
    required: false
    description: 'versao do terragrunt'
    default: '0.39.2'
  terraform_wrapper:
    required: false
    description: 'terraform wrapper'
    default: false    
  terraform_path:
    type: string
    required: true
    description: 'path terraform / terragrunt'
  terragrunt_deploy:
    type: boolean
    required: false
    description: 'definir se sera realizado deploy terragrunt'    
  aws_access_key_id:
    type: string
    required: false
    description: 'aws key id'
  aws_secret_access_key:
    type: string
    required: false
    description: 'aws secret'
  aws_region:
    type: string
    required: false
    description: 'aws region'    
  repo_terraform_gh_token:
    type: string
    required: true
    description: 'token terraform modules'    
  repo_terraform_gh_user:    
    type: string
    required: true
    description: 'token terraform modules' 
   
runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v2
  - name: "Configure AWS Credentials"
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-access-key-id: "${{ inputs.aws_access_key_id }}"
      aws-secret-access-key: "${{ inputs.aws_secret_access_key }}"
      aws-region: "${{ inputs.aws_region }}"
  - name: setup git url.insteadof
    run: |
           git config --local --remove-section http."https://github.com/"
           git config --global url."https://${GH_USER}:${GH_TOKEN}@github.com/doliveiraorg".insteadOf "https://github.com/doliveiraorg"
           
    shell: bash
    env:
      GH_TOKEN: ${{ inputs.repo_terraform_gh_token }}
      GH_USER: ${{ inputs.repo_terraform_gh_user }}
  
  - name: HashiCorp - Setup Terraform
    uses: hashicorp/setup-terraform@v2.0.2
    with:
      terraform_version: ${{ inputs.terraform_version }}
      terraform_wrapper: ${{ inputs.terraform_wrapper }}
  - name: Setup Terragrunt
    uses: autero1/action-terragrunt@v1.1.0
    with:
      terragrunt_version: ${{ inputs.terragrunt_version }}
  - name: Terraform init
    id: init
    run: |
           if [ "$TERRAGRUNT_DEPLOY" == "true" ]
           then
                 terragrunt init
           else
                 terraform init
           fi       
    working-directory: ${{ inputs.terraform_path }}
    shell: bash
    env:
      TERRAGRUNT_DEPLOY: ${{ inputs.terragrunt_deploy }}
  - name: Terraform validate
    id: validate
    run: |
           if [ "$TERRAGRUNT_DEPLOY" == "true" ]
           then
                 terragrunt validate -no-color
           else
                 terraform validate -no-color
           fi
    working-directory: ${{ inputs.terraform_path }}
    shell: bash
    env:
      TERRAGRUNT_DEPLOY: ${{ inputs.terragrunt_deploy }}
